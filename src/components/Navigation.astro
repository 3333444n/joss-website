---
import FacebookIcon from "../assets/icons/logo-facebook.svg";
import InstagramIcon from "../assets/icons/logo-instagram.svg";
import TikTokIcon from "../assets/icons/logo-tiktok.svg";
import WhatsAppIcon from "../assets/icons/logo-whatsapp.svg";
import MenuIcon from "../assets/icons/menu-outline.svg";
import CloseIcon from "../assets/icons/close-outline.svg";
import Logo from "../assets/images/isotipo_blanco_v01.png";
import { Image } from "astro:assets";

// Data for social media links
const socialLinks = [
  {
    href: "https://www.facebook.com/JossModoilusion",
    icon: FacebookIcon,
    alt: "Facebook icon",
  },
  {
    href: "https://www.instagram.com/jossortricks/",
    icon: InstagramIcon,
    alt: "Instagram icon",
  },
  {
    href: "https://www.tiktok.com/@jossortricks",
    icon: TikTokIcon,
    alt: "TikTok icon",
  },
  {
    href: "https://wa.me/message/TY7H3W7U5TJ7H1",
    icon: WhatsAppIcon,
    alt: "WhatsApp icon",
  },
];

// Data for navigation links
const navLinks = [
  { href: "/#el-mago", text: "Acerca de m√≠" },
  { href: "/#el-show", text: "Shows" },
  { href: "/#opiniones", text: "Opiniones" },
  { href: "/#faq", text: "Preguntas Frecuentes" },
];
---

<nav
  class="bg-primary-0 px-6 py-4 w-full fixed top-0 left-0 right-0 z-50 border-b border-primary-25 motion-preset-blur-down"
>
  <div class="max-w-screen-xl mx-auto flex items-center justify-between">
    <!-- Desktop Navigation -->
    <div class="hidden md:flex items-center justify-between w-full">
      <!-- Left Section: Social Media Icons -->
      <div class="flex items-center space-x-3">
        {
          socialLinks.map((link) => (
            <a
              href={link.href}
              target="_blank"
              rel="noopener noreferrer"
              class="text-primary-y hover:opacity-75 transition-opacity duration-150"
            >
              <link.icon class="h-6 w-6 fill-current" />
            </a>
          ))
        }
      </div>

      <!-- Center Section: Navigation Links -->
      <div class="flex items-center space-x-4 font-sans">
        {
          navLinks.map((link) => (
            <a
              href={link.href}
              class="text-text-white hover:text-text-grey transition-colors duration-150"
            >
              {link.text}
            </a>
          ))
        }
      </div>

      <!-- Right Section: WhatsApp Button -->
      <div>
        <a
          href="https://wa.me/message/TY7H3W7U5TJ7H1"
          class="bg-primary-y text-text-black px-4 py-2 rounded-full hover:bg-opacity-80 font-sans font-semibold text-sm md:text-base transition-opacity duration-150 whitespace-nowrap"
        >
          cotiza por whatsapp
        </a>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div class="md:hidden flex items-center justify-between w-full">
      <!-- Left Section: Logo -->
      <a href="/" class="z-50">
        <Image src={Logo} alt="Logo" class="h-8 w-auto" />
      </a>

      <!-- Right Section: Hamburger Menu Button -->
      <button
        id="menu-toggle"
        aria-expanded="false"
        aria-controls="mobile-menu"
        class="z-50 text-text-white p-2 relative w-12 h-12 rounded-full bg-transparent"
      >
        <span class="sr-only">Open main menu</span>
        <MenuIcon
          id="hamburger-icon"
          class="h-8 w-8 stroke-current transition-opacity duration-300 ease-in-out opacity-100 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
        />
        <CloseIcon
          id="close-icon"
          class="h-8 w-8 stroke-current transition-opacity duration-300 ease-in-out opacity-0 pointer-events-none absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
        />
      </button>
    </div>
  </div>
</nav>

<!-- Full-Screen Mobile Menu Overlay -->
<div
  id="mobile-menu"
  role="dialog"
  aria-modal="true"
  class="fixed inset-0 w-screen h-screen bg-primary-0 z-40 flex flex-col items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out"
  style="padding-bottom: 10vh;"
>
  <!-- Navigation Links -->
  <div class="flex flex-col items-center space-y-6">
    {
      navLinks.map((link, index) => (
        <a
          href={link.href}
          class={`font-aglio text-primary-y text-3xl hover:opacity-75 transition-opacity duration-150 nav-link-animate opacity-0 translate-x-8`}
          data-delay={index * 100}
        >
          {link.text}
        </a>
      ))
    }
  </div>

  <!-- Social Media Icons (Bottom) -->
  <div class="absolute bottom-48 flex items-center space-x-6">
    {
      socialLinks.map((link, index) => (
        <a
          href={link.href}
          target="_blank"
          rel="noopener noreferrer"
          class="text-primary-y hover:opacity-75 transition-opacity duration-150 social-icon-animate opacity-0 translate-y-8"
          data-delay={index * 100 + 400}
        >
          <link.icon class="h-8 w-8 fill-current" />
        </a>
      ))
    }
  </div>
</div>

<style>
  /* Hardware-accelerated animations for better mobile performance */
  .nav-link-animate,
  .social-icon-animate {
    will-change: transform, opacity;
    transform: translateZ(0); /* Force hardware acceleration */
  }

  .nav-link-animate {
    transition:
      transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .social-icon-animate {
    transition:
      transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* Ensure smooth overlay transitions */
  #mobile-menu {
    will-change: opacity;
    transform: translateZ(0);
  }

  /* Icon transitions */
  #hamburger-icon,
  #close-icon {
    will-change: opacity;
  }
</style>

<script>
  const menuToggle = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const hamburgerIcon = document.getElementById("hamburger-icon");
  const closeIcon = document.getElementById("close-icon");
  let isMenuOpen = false;
  let animationInProgress = false;

  if (menuToggle && mobileMenu && hamburgerIcon && closeIcon) {
    menuToggle.addEventListener("click", () => {
      // Prevent multiple clicks during animation
      if (animationInProgress) return;

      isMenuOpen = !isMenuOpen;
      animationInProgress = true;
      menuToggle.setAttribute("aria-expanded", isMenuOpen.toString());

      if (isMenuOpen) {
        // Open menu
        mobileMenu.classList.remove("opacity-0", "pointer-events-none");
        mobileMenu.classList.add("opacity-100", "pointer-events-auto");
        hamburgerIcon.classList.remove("opacity-100");
        hamburgerIcon.classList.add("opacity-0", "pointer-events-none");
        closeIcon.classList.remove("opacity-0", "pointer-events-none");
        closeIcon.classList.add("opacity-100");
        document.body.classList.add("overflow-hidden");

        // Use requestAnimationFrame for smoother animations
        requestAnimationFrame(() => {
          const navLinks = mobileMenu.querySelectorAll(".nav-link-animate");
          const socialIcons = mobileMenu.querySelectorAll(
            ".social-icon-animate"
          );

          // Animate navigation links in
          navLinks.forEach((link, index) => {
            requestAnimationFrame(() => {
              setTimeout(() => {
                link.classList.remove("opacity-0", "translate-x-8");
                link.classList.add("opacity-100", "translate-x-0");
              }, index * 80);
            });
          });

          // Animate social icons in
          socialIcons.forEach((icon, index) => {
            requestAnimationFrame(() => {
              setTimeout(
                () => {
                  icon.classList.remove("opacity-0", "translate-y-8");
                  icon.classList.add("opacity-100", "translate-y-0");
                },
                navLinks.length * 80 + index * 80
              );
            });
          });

          // Reset animation lock after opening animations complete
          setTimeout(
            () => {
              animationInProgress = false;
            },
            (navLinks.length + socialIcons.length) * 80 + 400
          );
        });
      } else {
        // Close menu - simplified approach for better performance
        const navLinks = mobileMenu.querySelectorAll(".nav-link-animate");
        const socialIcons = mobileMenu.querySelectorAll(".social-icon-animate");

        // Immediately start close animations without complex staggering
        requestAnimationFrame(() => {
          navLinks.forEach((link) => {
            link.classList.remove("opacity-100", "translate-x-0");
            link.classList.add("opacity-0", "translate-x-8");
          });

          socialIcons.forEach((icon) => {
            icon.classList.remove("opacity-100", "translate-y-0");
            icon.classList.add("opacity-0", "translate-y-8");
          });

          // Close overlay after a short delay
          setTimeout(() => {
            mobileMenu.classList.add("opacity-0", "pointer-events-none");
            mobileMenu.classList.remove("opacity-100", "pointer-events-auto");
            hamburgerIcon.classList.remove("opacity-0", "pointer-events-none");
            hamburgerIcon.classList.add("opacity-100");
            closeIcon.classList.remove("opacity-100");
            closeIcon.classList.add("opacity-0", "pointer-events-none");
            document.body.classList.remove("overflow-hidden");
            animationInProgress = false;
          }, 300);
        });
      }
    });

    // Close menu when a link is clicked
    const mobileNavLinks = mobileMenu.querySelectorAll("a");
    mobileNavLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (isMenuOpen && !animationInProgress) {
          menuToggle.click();
        }
      });
    });

    // Cleanup will-change on animation end for better performance
    const allAnimatedElements = mobileMenu.querySelectorAll(
      ".nav-link-animate, .social-icon-animate"
    );
    allAnimatedElements.forEach((element) => {
      element.addEventListener("transitionend", () => {
        if (!isMenuOpen) {
          (element as HTMLElement).style.willChange = "auto";
        }
      });
    });
  }
</script>

<!--
  Key features implemented based on prompt:
  - bg-primary-0 for nav background.
  - px-6 py-4 for nav padding.
  - max-w-screen-xl mx-auto for inner container centering and max width.
  - flex items-center justify-between for layout of the three sections.
  - Social Icons: yellow (text-primary-y), hover:opacity-75, specific icons from assets.
  - Nav Links: text-text-white, hover:text-text-grey, font-sans, hidden on small screens.
  - WhatsApp Button: bg-primary-y, text-text-black, px-4 py-2, rounded-lg, hover:bg-opacity-80, font-sans, font-semibold.
  - Bottom border: border-b border-primary-25.
  - Responsive considerations for button text size (text-sm md:text-base).
  - All links use href="#".
-->
<!--
  New features for mobile menu:
  - Imported MenuIcon, CloseIcon, and Logo.
  - Desktop navigation wrapped in `hidden md:flex`.
  - Mobile navigation section with Logo on left and Hamburger on right (`md:hidden`).
  - Hamburger/Close icon toggle functionality with SVGs.
  - Full-screen mobile menu overlay (`#mobile-menu`):
    - `fixed inset-0 w-screen h-screen bg-primary-0 z-40`
    - Fade in/out animation (`transition-opacity duration-300 ease-in-out opacity-0 pointer-events-none`)
    - Vertically stacked, centered navigation links with `font-aglio text-primary-y text-3xl`.
    - Social media icons at the bottom, `text-primary-y`.
  - JavaScript for:
    - `isMenuOpen` state.
    - Event listener on `menu-toggle`.
    - Toggling classes for menu visibility, icon swapping.
    - `aria-expanded` attribute update.
    - Body scroll lock (`overflow-hidden` on `<body>`).
    - Closing menu on nav link click.
  - SVGs (`MenuIcon`, `CloseIcon`) use `fill-current` and parent `text-text-white` for color.
  - Logo `Image` component from `astro:assets`.
  - Mobile menu z-index `z-40`-->
